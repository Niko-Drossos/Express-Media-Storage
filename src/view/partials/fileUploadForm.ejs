<!-- TODO: Change this to let users upload multiple files at a time -->
<div class="">
    <div class="header h-12 flex items-center justify-center">
        <h1 class="font-medium text-2xl">Upload Files</h1>
    </div>
    <div class="flex flex-col mx-3 lg:flex-row justify-center">
        <div class="w-1/2 m-1">
            <form class="w-full bg-white shadow-md p-6 rounded" onsubmit="uploadFileForm(event)">
                <div class="flex flex-wrap -mx-3">
                    <div class="w-full md:w-full flex">
                        <div class="w-1/2">
                            <div class="w-full md:w-full px-3 mb-6">
                                <label class="block uppercase tracking-wide text-gray-700 text-sm font-bold mb-2" for="title">Title</label>
                                <input class="appearance-none block w-full bg-white text-gray-900 font-medium border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none focus:border-[#98c01d]" type="text" name="title" id="title" placeholder="File name" required />
                            </div>
                            <div class="w-full md:w-full px-3 mb-6">
                                <label class="block uppercase tracking-wide text-gray-700 text-sm font-bold mb-2" for="date">Date</label>
                                <input class="appearance-none block w-full bg-white text-gray-900 font-medium border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none focus:border-[#98c01d]" type="date" name="date" id="date" required />
                            </div>
                        </div>   
                        <div class="w-1/2 px-3 mb-6">
                            <label class="block uppercase tracking-wide text-gray-700 text-sm font-bold mb-2" for="description">Description</label>
                            <textarea textarea rows="6" class="appearance-none block w-full bg-white text-gray-900 border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none focus:border-[#98c01d]" type="text" name="description" placeholder="File description" ></textarea>
                        </div>
                    </div>                

                    <div class="w-full md:w-full flex">
                        <div class="w-full md:w-full px-3 mb-6">
                            <label class="block uppercase tracking-wide text-gray-700 text-sm font-bold mb-2" for="tags">Tags</label>
                            <input class="appearance-none block w-full bg-white text-gray-900 font-medium border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none focus:border-[#98c01d]" type="text" name="tags" id="tags" placeholder="Festival" />
                            <img class="absolute right-4 top-9 transform -translate-y-0.5 cursor-pointer size-8" onclick="addTag(event)" src='../icons/plus-symbol.svg' alt="Add tag icon">
                        </div>
                        <div class="w-full md:w-full px-3 mb-6">
                            <label class="block uppercase tracking-wide text-gray-700 text-sm font-bold mb-2" for="privacy">Privacy</label>
                            <select class="appearance-none block w-full bg-white text-gray-900 font-medium border border-gray-400 rounded-lg py-3 px-3 leading-tight focus:outline-none focus:border-[#98c01d]" type="select" name="privacy" id="privacy" required>
                                <option value="private">Private</option>
                                <option value="public">Public</option>
                                <option value="unlisted">Unlisted</option>
                            </select>
                            
                        </div>
                    </div>
                    
                    <div class="w-full px-3 mb-3">
                        <label class="mx-auto cursor-pointer flex w-full max-w-lg flex-col items-center justify-center rounded-xl border-2 border-dashed border-green-400 bg-white p-6 text-center" for="file">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-10 w-10 text-green-800" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth="2">
                        <path strokeLinecap="round" strokeLinejoin="round" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12" />
                        </svg>

                        <h2 class="mt-4 text-xl font-medium text-gray-700 tracking-wide">File upload</h2>

                        <p class="mt-2 text-gray-500 tracking-wide">Upload or drag & drop your file image, video or audio</p>

                        <input id="file" type="file" class="hidden" name="file" accept="image/*,video/*,audio/*" onchange="fileChanged(event)" required />
                        </label>
                    </div>

                    <span class="hidden text-green-500 font-bold mb-4 px-3" id="display-file-name"></span>
                    
                    <div class="w-full md:w-full px-3">
                        <button class="appearance-none block w-full bg-green-700 text-gray-100 font-bold border border-gray-200 rounded-lg py-3 px-3 leading-tight hover:bg-green-600 focus:outline-none focus:bg-white focus:border-gray-500" >
                            Upload File
                        </button>
                    </div>
                </div>
            </form>
        </div>
        <!-- Might add this section, it looks really nice but i don't know what to do with it -->
        <!-- <div class="w-full lg:w-2/3 m-1 bg-white shadow-lg text-lg rounded-sm border border-gray-200">
            <div class="overflow-x-auto rounded-lg p-3">
                <table class="table-auto w-full">
                    <thead class="text-sm font-semibold uppercase text-gray-800 bg-gray-50 mx-auto">
                        <tr>
                            <th></th>
                            <th><svg xmlns="http://www.w3.org/2000/svg" class="fill-current w-5 h-5 mx-auto"><path d="M6 22h12a2 2 0 0 0 2-2V8l-6-6H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2zm7-18 5 5h-5V4zm-4.5 7a1.5 1.5 0 1 1-.001 3.001A1.5 1.5 0 0 1 8.5 11zm.5 5 1.597 1.363L13 13l4 6H7l2-3z"></path></svg></th>
                            <th class="p-2">
                                <div class="font-semibold">Category</div>
                            </th>
                            <th class="p-2">
                                <div class="font-semibold text-left">Description</div>
                            </th>
                            <th class="p-2">
                                <div class="font-semibold text-center">Action</div>
                            </th>
                        </tr>
                        <tr>
                            <td>1</td>
                            <td><img src="https://images.pexels.com/photos/25652584/pexels-photo-25652584/free-photo-of-elegant-man-wearing-navy-suit.jpeg?auto=compress&cs=tinysrgb&w=400" class="h-8 w-8 mx-auto" /></td>
                            <td>Sample Name</td>
                            <td>Sample Description</td>
                            <td class="p-2">
                                <div class="flex justify-center">
                                <a href="#" class="rounded-md hover:bg-green-100 text-green-600 p-2 flex justify-between items-center">
                                    <span><FaEdit class="w-4 h-4 mr-1"/>
                                    </span> Edit
                                </a>
                                <button class="rounded-md hover:bg-red-100 text-red-600 p-2 flex justify-between items-center">
                                    <span><FaTrash class="w-4 h-4 mr-1" /></span> Delete
                                </button>
                                </div>
                            </td>
                        </tr>
                    </thead>
                </table>
            </div>
        </div> -->
        
    </div>
</div>

<!-- Tus JS -->
<script src="https://cdn.jsdelivr.net/npm/tus-js-client/dist/tus.js"></script>

<script>
    function fileChanged(event) {
        const file = event.target.files[0]
        const fileName = file.name
        const displayFileName = document.getElementById('display-file-name')
        displayFileName.innerHTML = `Selected: ${fileName}`
        if (displayFileName.classList.contains('hidden')) {
            displayFileName.classList.remove('hidden')
            displayFileName.classList.add('block')
        } else {
            displayFileName.classList.remove('block')
            displayFileName.classList.add('hidden')
        }
    }
    
    /* async function uploadFileForm(event) {
        event.preventDefault()

        if (!event.target['file'].files[0]) {
            alert('Please select a file')
            return
        }
        
        const formData = new FormData()
        // They need to end in a zero because of the way that I tried to implement multiple file uploading
        formData.append('file0', event.target['file'].files[0])
        formData.append('title0', event.target['title'].value)
        formData.append('description0', event.target['description'].value)
        formData.append('date0', event.target['date'].value)
        formData.append('privacy0', event.target['privacy'].value)

        const uploadRequest = await fetch('/file/upload', {
            method: 'POST',
            credentials: 'include',
            body: formData
        })
        const uploadResponse = await uploadRequest.json()
        console.log(uploadResponse)
    } */

    async function uploadFileForm(event) {
        event.preventDefault()

        const file = event.target['file'].files[0];

        const upload = new tus.Upload(file, {
            endpoint: `${window.location.origin}/testing/upload/${file.name}`,
            retryDelays: [0, 1000, 3000, 5000],
            metadata: {
                filename: file.name,
                filetype: file.type,
            },
            onError: (error) => {
                console.log("Failed because: " + error);
            },
            onProgress: (bytesUploaded, bytesTotal) => {
                const percentage = ((bytesUploaded / bytesTotal) * 100).toFixed(2);
                console.log(bytesUploaded, bytesTotal, percentage + "%");
            },
            onSuccess: () => {
                console.log("Download %s from %s", upload.file.name, upload.url);
            }
        });

        upload.start();
    }
</script>