<div class="w-full flex mb-2 flex-col">
    <div class="mb-3 md:mb-0 relative">
        <label class="block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2" for="add-username">
            Users
        </label>
        <input class="appearance-none block w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4 pr-10" id="add-username" type="text" placeholder="JohnDoe123" oninput="fetchUsernameSuggestions(this.value)" list="username-datalist"/>
        <datalist id="username-datalist"></datalist>
        <img class="absolute right-4 top-9 transform -translate-y-0.5 cursor-pointer size-8" onclick="addUser()" src='./icons/plus-symbol.svg' alt="Add username icon">
    </div>
    <div class="w-full px-3 mb-3 md:mb-0 flex items-center flex-wrap h-auto flex-row mt-2" id="display-username"></div>

    <!-- This ruined me, don't ask -->
    <input id="usernames" name="usernames" value="" type="hidden"/>
</div>

<script>
    // Make the search find the media with a user
    let hiddenUsernames = document.getElementById('usernames')
    const displayUsernames = document.getElementById('display-username')
    const queryUsernames = "<%= query.usernames %>"
    
    // Construct an array of usernames from the query if is exists, otherwise make a plain array
    let usernameArray = queryUsernames === "" ? [] : queryUsernames.split(',')

    if (usernameArray.length) {
        usernameArray.forEach(username => displayUsernames.innerHTML += usernamePill(username))
    }

    function addUser() {
        const inputUsername = document.getElementById('add-username')
        const username = inputUsername.value.trim()
        
        if (username === ''){ 
            alert("You can't search for an empty username\nPlease add another username before searching")
        } else if (usernameArray.includes(username)) { 
            alert("You can't search for the same username twice\nPlease add a different username before searching")
        } else {
            displayUsernames.innerHTML += usernamePill(username)
            usernameArray.push(username)
            console.log('Updated usernameArray:', usernameArray)
            hiddenUsernames.value = usernameArray.join(',')
            inputUsername.value = ''
        }
    }

    function removeUser(username) {
        // Find the location of a username in the array
        const index = usernameArray.indexOf(username)
        usernameArray.splice(index, 1)
        hiddenUsernames.value = usernameArray.join(',')
        displayUsernames.innerHTML = usernameArray.map(username => usernamePill(username)).join('')
    }

    function usernamePill(username) {
        return `
            <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">
                ${username} 
                <span class="text-red-500 cursor-pointer" onclick="removeUser('${username}')">X</span>
            </span>`
    }

    <!-- ---------- Search for usernames and suggest them to the user ---------- -->

    const usernameQueryCache = {}
    
    //Update the datalist with suggestions
    const updateUsernameDatalist = (suggestions) => {
        const datalist = document.getElementById('username-datalist')
        datalist.innerHTML = ''
        suggestions.forEach((suggestion) => {
            const option = document.createElement('option')
            option.value = suggestion
            datalist.appendChild(option)
        })
    }

    let usernameSearchTimeout = null

    const fetchUsernameSuggestions = async (query) => {
        // Don't make a request if the query is empty
        if (query === '') {
            updateTagDatalist([])
            return
        }
        
        clearTimeout(usernameSearchTimeout)
        // Give the user some time to type before making the request
        usernameSearchTimeout = setTimeout(async () => {
            if (usernameQueryCache[query]) {
                updateUsernameDatalist(usernameQueryCache[query]) // Use cached results
                return
            }

            const request = await fetch(`/suggest/usernames?query=${encodeURIComponent(query)}`)
            const response = await request.json()
            const suggestions = response.data.suggestions
            usernameQueryCache[query] = suggestions // Cache the result
            updateUsernameDatalist(suggestions)
        }, 500)
    }
</script>