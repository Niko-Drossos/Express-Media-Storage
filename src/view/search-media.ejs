<h1 class="flex justify-center py-2">Search Media</h1> 

<%- include('./partials/form/searchMedia.ejs') %>

<div>
    <hr class="my-4 border">
    
    <%- include('./partials/form/pagination.ejs', { response }) %>

    <div class="grid lg:grid-cols-3 md:grid-cols-2 grid-cols-1 gap-4 p-8">
        <!-- Finish file display -->
        <% if (searchResults.length) { %>
            <% searchResults.map((media, index) => { %>
                <!-- Only show the first documents returned until the limit -->
                <% if (index >= response.limit) return %>
                <% let header = include('./partials/cards/cardHeader.ejs', { id: media._id, mediaType: query.mediaType, user: media.user, date: media.date, title: media.title, description: media.description }) %>
                <% let content = include('./partials/cards/mediaCardContent.ejs', { _id: media._id, mediaType: query.mediaType, fileId: media.fileId }) %>
                <% let footer = include('./partials/cards/cardFooter.ejs', { id: media._id, mediaType: query.mediaType.slice(0, -1), favorited: media.favorited, voteCount: media.voteCount }) %>
                <%- include('./partials/cards/card.ejs', { header, content, footer }) %>
              <% }) %>
        <% } %>
    </div>
</div>
    <!-- I might use this for something else at some point -->
<!-- <div class='max-w-md mx-auto'>
    <div class="relative flex items-center w-full h-12 rounded-lg focus-within:shadow-lg bg-white overflow-hidden">
        <input
        class="peer h-full w-full outline-none text-sm text-gray-700 px-2"
        type="text"
        id="search"
        placeholder="Search something..." /> 

        <div class="grid place-items-center h-full w-12 text-gray-300">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
        </div>
    </div>
</div> -->

<script>
    // Start each spinner on load
    document.querySelectorAll('.spinner').forEach(spinner => {
        showSpinner(spinner.id.split('-').pop())
    })

    function replaceSkeleton(card) {
        const img = card.querySelector('.lazy-thumb');
        const spinner = card.querySelector('.spinner');
        const actualSrc = img.dataset.src;

        // Replace the src with the actual image    
        const preloader = new Image();
        preloader.onload = () => {
            img.src = actualSrc;
            if (spinner) hideSpinner(img.dataset.spinnerId)
        };

        preloader.src = actualSrc;
    }

    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.card').forEach(card => {
        replaceSkeleton(card);
        });
    });
</script>