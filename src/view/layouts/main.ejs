<!DOCTYPE html>
<html lang="en" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="../styles/output.css">
    <title>Story</title>
</head>
<body class=" container mx-auto sm:px-6">
    <%- include('../partials/header.ejs') %>
    <!-- <%- include('../UNUSED COMPONENTS/banner-link.ejs', { text: "This is a banner", action: { name: "Click here", url: "#" }}) %> -->
    <main class="container bg-slate-200 min-h-[calc(100vh-64px)] h-full">
        <%- body %>
    </main>
    <%- include('../partials/footer.ejs') %>
</body>
</html>

<script>
  // <!-- ------------------------- Modal functionality ------------------------- -->
  
  function showModal(name, title="", message="") {
    const modal = document.getElementById(`modal-${name}`)

    if (title) {
      const titleElement = document.getElementById(`modal-title-${name}`)
      titleElement.innerHTML = title
    }

    if (message) {
      const messageElement = document.getElementById(`modal-message-${name}`)
      messageElement.innerHTML = message
    }

    modal.classList.remove('hidden')
  }

  function hideModal(name) {
    const modal = document.getElementById(`modal-${name}`)
    modal.classList.add('hidden')
  }

  function clickModal(name, redirect = null) {
    hideModal(name)
    if (redirect) {
      document.location = redirect
    }
    return true
  }

  function cancelModal(name, redirect = null) {
    hideModal(name)
    if (redirect) {
      document.location = redirect
    }
    return false
  }

  // <!-- ------------------------- Alert functionality ------------------------- -->

  function showAlert(name, title="", message="") {
    const alert = document.getElementById(`alert-${name}`)

    if (title) {
      const titleElement = document.getElementById(`alert-title-${name}`)
      titleElement.innerHTML = title
    }

    if (message) {
      const messageElement = document.getElementById(`alert-message-${name}`)
      messageElement.innerHTML = message
    }

    alert.classList.remove('hidden')
  }

  function hideAlert(name) {
    const alert = document.getElementById(`alert-${name}`)
    alert.classList.add('hidden')
  }

  // <!-- ------------------------- Vote functionality ------------------------- -->

  async function vote(vote, { id, documentType }) {
    const voteCounter = document.getElementById(`vote-count-${id}`)

    // Vote on a document
    const request = await fetch(`/vote/${documentType}/${id}`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      credentials: "include",
      body: JSON.stringify({
        vote
      })
    })

    const response = await request.json()

    if (response.error) {
      alert(response.error)
      return
    }   

    const voteCount = response.data.voteCount

    // I am aware this looks, and probably preforms badly but its fine for now.
    if (voteCount > 0) {
      voteCounter.classList.remove("text-red-600")
      voteCounter.classList.remove("text-gray-600")
      voteCounter.classList.add("text-green-600")
    } else if (voteCount === 0) {
      voteCounter.classList.remove("text-green-600")
      voteCounter.classList.remove("text-red-600")
      voteCounter.classList.add("text-gray-600")
    } else {
      voteCounter.classList.remove("text-green-600")
      voteCounter.classList.remove("text-gray-600")
      voteCounter.classList.add("text-red-600")
    }

    voteCounter.innerText = voteCount
  }

  // <!-- ------------------------- Copy functionality ------------------------- -->

  async function copyToClipboard(text) {
    try {
      await navigator.clipboard.writeText(text);
      alert("text copied to clipboard! ðŸ“‹");
    } catch (err) {
      alert("failed to copy text to clipboard! ðŸ“‹");
      console.error("Failed to copy:", err);
    }
  }

  // <!-- ---------------------- Media card functionality ----------------------- -->

  // Toggle dropdown menu for media cards
  function toggleDropdownMenu(id) {
    const dropdownMenu = document.getElementById(`dropdownMenu-${id}`); 
    
    dropdownMenu.classList.toggle("hidden");
  }

  // Search for pools when a user clicks the date under the username
  function searchWithDate(date) {
    const formattedDate = new Date(date).toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).replace(/\//g, '-');
    window.location.href = `/search-pools?startDate=${formattedDate}&endDate=${formattedDate}`
  }

  // <!-- ------------------------- Loading functionality ------------------------- -->

  function showSpinner(id) {
    const spinner = document.getElementById(`loading-spinner-${id}`)
    spinner.classList.remove('hidden')
  }

  function hideSpinner(id) {
    const spinner = document.getElementById(`loading-spinner-${id}`)
    spinner.classList.add('hidden')
  }

  // <!-- ------------------------- Lazy loading functionality ------------------------- -->

  function replaceSkeleton(card) {
      const img = card.querySelector('.lazy-thumb');
      const spinner = card.querySelector('.spinner');
      const actualSrc = img.dataset.src;

      // Replace the src with the actual image    
      const preloader = new Image();
      preloader.onload = () => {
        img.src = actualSrc;
        if (spinner) hideSpinner(img.dataset.spinnerId)
      };

      preloader.src = actualSrc;
    }

    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('.card').forEach(card => {
        replaceSkeleton(card);
      });
    });
</script>